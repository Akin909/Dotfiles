#!/usr/bin/zsh
#=======================================================================
#       ENV VARIABLES
#=======================================================================
export DOTFILES=$HOME/.dotfiles

if which yarn >/dev/null; then
  export PATH="$PATH:$(yarn global bin)"
fi

export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="$HOME/.npm/bin:$PATH"
# TODO remove this variable once no longer building neovim from source
export PATH="$HOME/neovim/bin:$PATH"

if [[ "$OSTYPE" == "linux-gnu" ]]; then
  # JAVA ==========================================================
  # export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
  # Use Java 8 because
  # https://stackoverflow.com/questions/49758849/flutter-io-android-license-status-unknown
  export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
  export PATH=$JAVA_HOME/bin:$PATH
  # GO ============================================================
  export GOPATH=$(go env GOPATH)
  export PATH=$PATH:/usr/local/go/bin
  export PATH=$PATH:$(go env GOPATH)/bin
  # ===============================================================
  export PATH=$HOME/.local/bin:$PATH
  # FLUTTER =======================================================
  export PATH="$PATH:$HOME/flutter/bin"
  export PATH="$PATH:$HOME/flutter/.pub-cache/bin"
  # RUST ==========================================================
  export PATH="$HOME/.cargo/bin:$PATH"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # Don't try to control go variables on systems we don't have total control over
  if [[ $MINIMAL != true ]]; then
    # Mac OSX
    export GOPATH=$HOME/Desktop/Coding/Go
    export GOROOT=/usr/local/opt/go/libexec
    export PATH=$PATH:/usr/local/opt/go/libexec/bin
    export PATH=$PATH:$(go env GOPATH)/bin
  fi
fi

if [ -d "$HOME/bin" ] ; then
  PATH="$HOME/bin:$PATH"
fi

export MANPATH="/usr/local/man:$MANPATH"

# you may need to manually set your language environment
export LC_ALL=en_GB.UTF-8
export LANG=en_GB.UTF-8

# preferred editor for local and remote sessions
export EDITOR='nvim'

export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR

if [ -f "$HOME/.environment.secret.sh" ]; then
  source $HOME/.environment.secret.sh
fi
# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=241'

if ! type "$bat" > /dev/null; then
  export BAT_THEME="TwoDark"
fi

# Setting ag as the default source for fzf

# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
# Need to escape the "!" and "*" characters using /
# --no-ignore = this flag shows node modules etc

export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'
# Reference: Man fzf - bind previous and next history commands explicitly or they will swallow up c-n and c-p
export FZF_DEFAULT_OPTS="--history=$HOME/.fzf_history --bind=up:previous-history,down:next-history,ctrl-n:down,ctrl-p:up"

# Using highlight (http://www.andre-simon.de/doku/highlight/en/highlight.html)
export FZF_CTRL_T_OPTS="--select-1 --exit-0 --preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"

# To apply to the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_TMUX=1
