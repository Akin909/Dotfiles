#=======================================================================
#               STARTUP TIMES
#=======================================================================
zmodload zsh/zprof
start_time="$(date +%s)"

#=======================================================================
#       ENV VARIABLES
#=======================================================================
export PATH="$PATH:`yarn global bin`"
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.node/bin:$HOME/.rbenv/shims:$PATH
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# this line puts Python in the Path var
export PATH=$HOME/Library/Python/2.7/bin:$PATH
# Path to your oh-my-zsh installation.
export ZSH=/Users/A_nonymous/.oh-my-zsh

# Disable the default oh my zsh vi indicator
# export RPS1="%{$reset_color%}"

export MANPATH="/usr/local/man:$MANPATH"

# you may need to manually set your language environment
 export LANG=en_us.utf-8

# preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='vim'
 fi

export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR
# compilation flags
# export archflags="-arch x86_64"

# ssh
 export SSH_KEY_PATH="~/.ssh/rsa_id"

#=======================================================================

#                 THEME
#=======================================================================
ZSH_THEME="frmendes/geometry"
# PROMPT
# ➔ - default arrow
# ➼ - fun alternative
# ➪ - fun alternative2
SPACESHIP_PROMPT_SYMBOL='➜ 🍕 👾 '
SPACESHIP_PROMPT_ADD_NEWLINE=true

# TIME
SPACESHIP_TIME_SHOW=true
SPACESHIP_TIME_12HR=true

# VI_MODE
SPACESHIP_VI_MODE_SHOW=true
SPACESHIP_VI_MODE_INSERT="[Insert]"
SPACESHIP_VI_MODE_NORMAL="[Normal]"
# GIT
SPACESHIP_PREFIX_GIT='  on '


# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
DEFAULT_USER=$USER


#Cmd spetrum_ls shows all available terminal colors!!

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
 HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13
frmendes/geometry
# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
 ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
 COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
 # DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
 HIST_STAMPS="dd/mm/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=$DOTFILES/oh-my-zsh/custom

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

# Change the path where project plugin creates projects
export PROJECTS_HOME=~/Desktop/Coding
# Aliases 'hub' to git to allow for greater git powah!!
eval "$(hub alias -s)"

export NVM_LAZY_LOAD=true
export NVM_AUTO_USE=true
# NB for future notice this tries to install in dotfiles unless explicitly
# specified here
#======================================================================
#                    PLUGINS 
#======================================================================
export NVM_DIR="$HOME/.nvm"
plugins=(zsh-nvm vi-mode git npm brew tmux vundle git-auto-status web-search  common-aliases command-not-found)


# ZSH_TMUX_AUTOSTART="true"

source $ZSH/oh-my-zsh.sh

# set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the zsh_custom folder.
# for a full list of active aliases, run `alias`.
#moved to .oh-my-zsh/lib/alias.zsh

#=======================================================================
# GEOMETRY SETTINGS
#=======================================================================
PROMPT_GEOMETRY_COLORIZE_SYMBOL=true
GEOMETRY_SYMBOL_PROMPT="▲"
GEOMETRY_PROMPT_SUFFIX="\n ➜  🍕 👾  "
GEOMETRY_PROMPT_PLUGIN==(virtualenv node git exec_time)

#=======================================================================
# User configuration
#=======================================================================

# add-zsh-hook precmd _z_precmd
# function _z_precmd {
#     _z --add "$PWD"
# }
#=======================================================================
#                  ZPLUG
#=======================================================================
# Make sure to use double quotes
# zplug "plugins/git", from:oh-my-zsh
# zplug "plugins/pip", from:oh-my-zsh
# zplug "plugins/git", from:oh-my-zsh
# zplug "plugins/heroku", from:oh-my-zsh
# zplug "plugins/command-not-found", from:oh-my-zsh
# zplug "lukechilds/zsh-better-npm-completion"
# zplug "plugins/tmux", from:oh-my-zsh
# zplug "plugins/colored-man-pages", from:oh-my-zsh
# zplug "plugins/osx", from:oh-my-zsh
# zplug "plugins/web-search", from:oh-my-zsh
# zplug "plugins/common-aliases", from:oh-my-zsh
# zplug "plugins/brew", from:oh-my-zsh
# zplug "plugins/pyenv", from:oh-my-zsh, lazy:true
# zplug "plugins/python", from:oh-my-zsh
# zplug "plugins/osx", from:oh-my-zsh
# zplug "b4b4r07/enhancd", use:init.sh
# zplug "zsh-users/zsh-completions"
# zplug "zsh-users/zsh-autosuggestions"
# zplug "zsh-users/zsh-history-substring-search"
# zplug "lukechilds/zsh-nvm", lazy:true
# zplug "k4rthik/git-cal"
# zplug "djui/alias-tips"
# zplug "rupa/z", use:z.sh
# zplug "knu/z", use:zsh, defer:3
# zplug "gko/project", use:project.sh
# zplug "supercrabtree/k"
# zplug "urbainvaes/fzf-marks"


# Set the priority when loading
# e.g., zsh-syntax-highlighting must be loaded
# after executing compinit command and sourcing other plugins
# (If the defer tag is given 2 or above, run after compinit command)
# zplug "zsh-users/zsh-syntax-highlighting", defer:3
# # Group dependencies
# # Load "emoji-cli" if "jq" is installed in this example
# # zplug "stedolan/jq", \
# #     from:gh-r, \
# #     as:command, \
#     rename-to:jq
# zplug "b4b4r07/emoji-cli", \
#     on:"stedolan/jq"
#=======================================================================
#               VI-MODE
#=======================================================================
source ~/Dotfiles/bin/vim_mode.zsh
# Default vi mode - not compatible with vi mode zsh plugin
bindkey -v
# Binds vim mode terminal esc command to jk
bindkey -M viins ‘jk’ vi-cmd-mode
export KEYTIMEOUT=1
# bindkey ‘^R’ history-incremental-search-backward
# function zle-line-init zle-keymap-select {
#     VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
#     RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}$EPS1"
#     zle reset-prompt
# }
# #
# zle -N zle-line-init
# zle -N zle-keymap-select
# #Use vim cli mode (C-P and C-N to navigate history)
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^ ' autosuggest-accept

#======================================================================
# NATIVE SETTINGS
#======================================================================
# persistent reshahing i.e puts new executables in the $path
zstyle ':completion:*' rehash true
zstyle ':completion:*' menu select 


# if no command is set typing in a line will cd by default
setopt AUTO_CD
setopt CORRECT
setopt RM_STAR_WAIT

# set some history options
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify

# Share your history across all your terminal windows
setopt share_history
# Keep a ton of history.
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history
# POWERLINE ==========================================================
if [[ -r ~/.local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh ]]; then
    source ~/.local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
fi
# BASE16===============================================================
# default code for base16 shell
base16_shell=$home/.config/base16-shell/
[ -n "$ps1" ] && [ -s $base16_shell/profile_helper.sh ] && eval "$($base16_shell/profile_helper.sh)"


#=======================================================================
#   LOCAL SCRIPTS
#=======================================================================
# source all zsh and sh files inside dotfile/runcom
# source $DOTFILES/runcom/functions.sh
# source $DOTFILES/runcom/zsh/alias.zsh
# for fzfscript ($DOTFILES/runcom/fzf/*.sh) source $fzfscript
# for script ($DOTFILES/runcom/zsh/*) source $script

#=======================================================================
#       FUNCTIONS
#=======================================================================

# Setup global bookmarks cdg function
# ====================================
# Need to find a way to export this to my cdg function
unalias cdg 2> /dev/null
cdg() {
   local dest_dir=$(cdscuts_glob_echo | fzf )
   if [[ $dest_dir != '' ]]; then
      cd "$dest_dir"
   fi
}
# export -f cdg > /dev/null
# Automatically list directory contents on `cd`. slow things down
# unnecessarily
auto-ls () { ls -GC; }
chpwd_functions=( auto-ls $chpwd_functions )

# Z=====================================================================
# saves time cd’ing through dir tree’s you can do z end dir [tab]
# brew install z - the command below since i forgot activates z plugin
. `brew --prefix`/etc/profile.d/z.sh


export path=~/.rbenv:$path



# iTERM Integration ==================================================
test -e "${home}/.iterm2_shell_integration.zsh" && source "${home}/.iterm2_shell_integration.zsh"
# activates the 'fasd' plugin a more versatile file system traversal plugin
# source $zsh/plugins/fasd/fasd.plugin.zsh
# Syntax highlighting
source ~/.oh-my-zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh  

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# STARTUP TIMES (CONTD)================================================
end_time="$(date +%s)"
# Compares start time defined above with end time above and prints the
# difference
echo load time: $((end_time - start_time)) seconds
# zprof
