zmodload zsh/zprof

start_time="$(date +%s)"


#=======================================================================
#       ENVIRONMENT VARIABLES 
#=======================================================================
DEFAULT_USER=$USER

export MANPATH="/usr/local/man:$MANPATH"
export PATH=~/.rbenv:$PATH
# you may need to manually set your language environment
 export LANG=en_us.utf-8

# preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='vim'
 fi

export USE_EDITOR=$EDITOR
export VISUAL=$EDITOR

# compilation flags
# export archflags="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"


export DOTFILES=$HOME/Dotfiles
export RUNCOM=$DOTFILES/runcom/

export PATH="$PATH:`yarn global bin`"
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.node/bin:$HOME/.rbenv/shims:$PATH
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export NVM_LAZY_LOAD=true
# export NVM_AUTO_USE=true
# NB for future notice this tries to install in dotfiles unless explicitly
# specified here
export NVM_DIR="$HOME/.nvm"


# ZSH_TMUX_AUTOSTART="true"
# this line puts Python in the PATH
export PATH=$HOME/Library/Python/2.7/bin:$PATH


ZGEN_PLUGIN_UPDATE_DAYS=3
# Auto run zgen reset if these files change
ZGEN_RESET_ON_CHANGE=($DOTFILES/zgen/.zshrc.zgen)

export NVM_LAZY_LOAD=true
# export NVM_AUTO_USE=true
# NB for future notice this tries to install in dotfiles unless explicitly
# specified here
export NVM_DIR="$HOME/.nvm"


# ZSH_TMUX_AUTOSTART="true"
#=======================================================================

#                 THEME
#=======================================================================

# PROMPT
# ‚ûî - default arrow
# ‚ûº - fun alternative
# ‚û™ - fun alternative2
SPACESHIP_PROMPT_SYMBOL='‚ûú üçï üëæ '
SPACESHIP_PROMPT_ADD_NEWLINE=true

# TIME
SPACESHIP_TIME_SHOW=true
SPACESHIP_TIME_12HR=true

# VI_MODE
SPACESHIP_VI_MODE_SHOW=true
SPACESHIP_VI_MODE_INSERT="[Insert]"
SPACESHIP_VI_MODE_NORMAL="[Normal]"
# GIT
SPACESHIP_PREFIX_GIT=' Óúà on '
SPACESHIP_PREFIX_NVM=' @ '

#=======================================================================
# GEOMETRY SETTINGS
#=======================================================================
PROMPT_GEOMETRY_COLORIZE_SYMBOL=true
GEOMETRY_SYMBOL_PROMPT="‚ñ≤"
GEOMETRY_PROMPT_SUFFIX="\n ‚ûú  üçï üëæ  "
GEOMETRY_PROMPT_PLUGIN==(virtualenv node git exec_time)


#=======================================================================
#                  ZGEN
#=======================================================================
# Make sure to use double quotes
# load zgen
source $HOME/.zgen/zgen.zsh
# if the init scipt doesn't exist
if ! zgen saved; then
    echo "Creating a zgen save"

        zgen oh-my-zsh

zgen oh-my-zsh plugins/pip
zgen oh-my-zsh plugins/git
zgen oh-my-zsh plugins/heroku
zgen oh-my-zsh plugins/command-not-found
zgen oh-my-zsh plugins/tmux
zgen oh-my-zsh plugins/colored-man-pages
zgen oh-my-zsh plugins/osx
zgen oh-my-zsh plugins/web-search
zgen oh-my-zsh plugins/common-aliases
zgen oh-my-zsh plugins/brew
# zgen oh-my-zsh plugins/pyenv ??Slow
zgen oh-my-zsh plugins/python
zgen oh-my-zsh plugins/osx



zgen loadall <<EOPLUGINS
lukechilds/zsh-better-npm-completion
b4b4r07/enhancd
zsh-users/zsh-completions src
zsh-users/zsh-autosuggestions
zsh-users/zsh-history-substring-search
lukechilds/zsh-nvm
k4rthik/git-cal 
uvaes/fzf-marks
djui/alias-tips
rupa/z
knu/z
gko/project
zsh-users/zsh-syntax-highlighting
junegunn/fzf-bin
supercrabtree/k
unixorn/autoupdate-zgen
# THEME
frmendes/geometry
EOPLUGINS
# zgen oshybystyi/git-auto-status.plugin.zsh



# Load theme file
# zgen "themes/bureau"
# zgen "dracula/zsh"
# zgen "skuridin/oh-my-zsh-node-theme"
# zgen mafredri/zsh-async
# zgen "sindresorhus/pure"
# zgen "denysdovhan/space"

zgen save

fi




#=================================================================================================
#         NATIVE SHELL OPTIONS
#=================================================================================================
# if no command is set typing in a line will cd by default
setopt AUTO_CD
setopt CORRECT
setopt RM_STAR_WAIT

# set some history options
setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify

# Share your history across all your terminal windows
setopt share_history
# Keep a ton of history.
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history
# persistent reshahing i.e puts new executables in the $path
zstyle ':completion:*' rehash true
# Highlights autocompletion selections
zstyle ':completion:*' menu select 

#=======================================================================
#               VI-MODE & Other BINDINGS
#=======================================================================
# source ~/Dotfiles/bin/vim_mode.zsh


# Default vi mode - not compatible with vi mode zsh plugin
bindkey -v
# Binds vim mode terminal esc command to jk
bindkey -M viins ‚Äòjk‚Äô vi-cmd-mode
export KEYTIMEOUT=1

bindkey ‚Äò^R‚Äô history-incremental-search-backward
# function zle-line-init zle-keymap-select {
#     VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
#     RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}$EPS1"
#     zle reset-prompt
# }
# #
# zle -N zle-line-init
# zle -N zle-keymap-select
# #Use vim cli mode (C-P and C-N to navigate history)
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^ ' autosuggest-accept

#=================================================================================================
#  PLUGIN VARIABLES & FUNCTIONS
#=================================================================================================
add-zsh-hook precmd _z_precmd
function _z_precmd {
    _z --add "$PWD"
}
# Change the path where project plugin creates projects
export PROJECTS_HOME=~/Desktop/Coding
# Aliases 'hub' to git to allow for greater git powah!!
eval "$(hub alias -s)"

export ZSH_PLUGINS_ALIAS_TIPS_TEXT="Alias tip: "



if [[ -r ~/.local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh ]]; then
    source ~/.local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
fi

# default code for base16 shell
base16_shell=$home/.config/base16-shell/
[ -n "$ps1" ] && [ -s $base16_shell/profile_helper.sh ] && eval "$($base16_shell/profile_helper.sh)"



#=================================================================================================
#               LOCAL SCRIPTS
#=================================================================================================
# source all zsh and sh files inside dotfile/runcom
source $DOTFILES/runcom/functions.sh
source $DOTFILES/runcom/zsh/alias.zsh
# for config ($RUNCOM/**/*) source $config - too dangerous
for fzfscript ($DOTFILES/runcom/fzf/*.sh) source $fzfscript
for script ($DOTFILES/runcom/zsh/*) source $script


#=================================================================================================
# Functions (to be exported to a separate file)
#=================================================================================================
# Setup global bookmarks cdg function
# ====================================
# Need to find a way to export this to my cdg function - found a plugin to do
# this less hackily
# unalias cdg 2> /dev/null
# cdg() {
#    local dest_dir=$(cdscuts_glob_echo | fzf )
#    if [[ $dest_dir != '' ]]; then
#       cd "$dest_dir"
#    fi
# }
# export -f cdg > /dev/null

# Automatically list directory contents on `cd`. slow things down
# unnecessarily
auto-ls () { ls -GC; }
chpwd_functions=( auto-ls $chpwd_functions )
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

#=================================================================================================
#                     STARTUP TIME
#=================================================================================================
end_time="$(date +%s)"
# Compares start time defined above with end time above and prints the
# difference
echo load time: $((end_time - start_time)) seconds
# zprof
